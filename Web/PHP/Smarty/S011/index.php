<?php
/*
 * 页面缓存  
 * PHP 代码被 PHP 模块解释完毕生成的静态内容，放到一个文件里边
 * 这个文件就是缓存文件，可以被 浏览器 直接解释
 *
 * 数据缓存 
 * 把 mysql 的数据读取出来放到速度更快的介质上操作 
 *
 * 其操作步骤是：
 * 判断是否有静态缓存文件，如果有直接获取并返回给乃
 * 如果没有静态文件，判断是否已经存在对应混编文件，如果有直接用该混编
 * 		如果没有对应混编文件，则还是过模板文件
 * 
 */
header("Content-Type:text/html; charset=utf-8");
require '../libs/Smarty.class.php';
$ms = new Smarty();
$ms->setTemplateDir('./view/');
$ms->setCompileDir('./view_c/');


/* 页面缓存 */


// 开启缓存

$ms->caching = 1;

// 会将下面第一次生成的内容存放在 cache 目录里
// 如果第二次用生成的内容则可以直接去 cache 里面找
// 但是，如果第二次在该页面中改变 fruit 的值，则会出现问题
// 就是因为第一次生成的缓存文件已经存在，而第二生成缓存文件时，该缓存文件已经在了
// 		所以就直接访问该缓存文件，而不会在生成一个缓存文件
// 		但是，如果手动删除该缓存文件的话，则会重新生成一个缓存，那么 fruit 新增加的值就有了


/*
 * 缓存更新
 *
 * 1.删除对应缓存文件，系统会自动更新缓存文件
 * 2.对应的模板文件，（包括对应的配置文件，布局文件，包含文件）有更新，缓存会自动更新
 * 3.缓存文件的有效时间过期会自动更新缓存 
 *
 */

// 修改缓存文件的有效时间
// 每 20 秒会自动更新缓存文件
$ms->cache_lifetime = 20;  // 默认是 3600 秒就是一个小时

$ms->assign('fruit', array('dog','cat','fish','pig','wolf'));


$ms->display('index.html');


/**
 *
 *@var cache_lifetime	1	缓存文件有效期时间判断，根据 smaty 对象 cache_lifetime 判断
 *@var cache_lifetime	2	缓存文件有效期时间判断，根据缓存文件本身自己时间判断
 *
 *
 */


